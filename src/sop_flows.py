# sop_flows.py - 存储所有SOP流程内容
sop_library = {
    "医疗咨询": [
        "步骤1: 获取用户的症状描述和病史信息。",
        "步骤2: 调用医学知识库API，基于症状和病史进行初步诊断。",
        "步骤3: 提供初步诊断结果和建议，包括是否需要就医。",
        "步骤4: 如果需要，提供就医建议和可能的医生专科推荐。",
        "步骤5: 跟踪用户反馈，记录症状变化，并调整后续建议。"
    ],
    "疾病预防": [
        "步骤1: 获取用户的健康信息和生活习惯。",
        "步骤2: 调用疾病预防知识库API，基于用户信息提供预防建议。",
        "步骤3: 提供个性化的预防措施和健康建议。",
        "步骤4: 生成和提供相关的健康教育内容。",
        "步骤5: 跟踪用户反馈，调整预防建议。"
    ],
    "用药咨询": [
        "步骤1: 获取用户的用药问题或需求。",
        "步骤2: 调用药品知识库API，提供药物使用说明和注意事项。",
        "步骤3: 根据用户的健康信息和病史，提供用药建议。",
        "步骤4: 提供药物的副作用信息和与其他药物的相互作用。",
        "步骤5: 跟踪用户反馈，记录用药效果，并调整用药建议。"
    ],
    "健康检查预约": [
        "步骤1: 获取用户的健康检查需求。",
        "步骤2: 查询可用的检查项目和预约时间。",
        "步骤3: 根据用户的需求和健康状况推荐适合的检查项目。",
        "步骤4: 提供预约步骤和相关信息，帮助用户完成预约。",
        "步骤5: 跟踪用户的预约状态，并提供后续检查注意事项。"
    ],
    "症状跟踪": [
        "步骤1: 获取用户的症状信息和变化情况。",
        "步骤2: 根据症状变化提供反馈和调整建议。",
        "步骤3: 如果症状恶化，提供进一步的就医建议。",
        "步骤4: 记录症状变化和用户反馈，用于调整建议。",
        "步骤5: 提供持续的健康跟踪和支持。"
    ],
    "闲聊": [
        "步骤1: 分析用户的闲聊内容，识别话题。",
        "步骤2: 根据识别的话题选择合适的闲聊内容。",
        "步骤3: 生成回应内容，确保符合用户的兴趣。",
        "步骤4: 调整对话风格，使其更自然和亲切。",
        "步骤5: 根据用户反馈调整闲聊策略。"
    ]
}
